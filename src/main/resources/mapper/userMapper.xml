<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webShopBack.dao.UserDao">

    <!--User实体类-->
    <resultMap id="userResultMap" type="User">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="state" column="state"/>
        <result property="createTime" column="add_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--UserRole关联表-->
    <resultMap id="userRoleMap" type="UserRole">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
    </resultMap>


    <!--根据用户名查询-->
    <select id="findByUserName" resultType="User" resultMap="userResultMap">
       SELECT user_id,user_name,password,salt,state,add_time
        FROM user
       WHERE user_name = #{userName}
    </select>
    <!--添加用户-->
    <insert id="addUser" parameterType="User" flushCache="true"
            useGeneratedKeys="true">
        INSERT INTO user(user_name, password, salt, state, add_time)
                VALUES (#{userName},#{password},#{salt},#{state},#{createTime})
    </insert>
    <!--对用户添加角色-->
    <insert id="addRole" parameterType="UserRole" keyProperty="userId"
            useGeneratedKeys="true">
        INSERT INTO auth_user_role(user_id, role_id)
                VALUES(
                    (SELECT user_id FROM user WHERE user_name = #{userName}),
                    #{roleId}
                )
    </insert>
    <!--禁用用户-->
    <update id="lockedUser" parameterType="User">
        UPDATE user SET state = #{state}
          WHERE user_name = #{userName}
    </update>
    <!--返回所有的用户-->
    <select id="getAllUser"  resultType="Map">
        SELECT ua.user_id as userId,ua.user_name as userName,ua.state,ua.createTime,r.role_name as roleName,r.role_description as
            roleDescription FROM (
            SELECT u.user_id,user_name,state,add_time as createTime,a.role_id FROM user u
             LEFT JOIN auth_user_role a ON u.user_id = a.user_id )ua
            LEFT JOIN user_role r ON ua.role_id = r.id
    </select>

</mapper>